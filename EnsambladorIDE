int a =2;
int b =3;
int c =4;
int d =5;
int e =6;
int f =7;
int g =8;
int a1 =9;
int b1 =10;
int c1 =11;
int d1 =12;
int e1 =13;
int ele;
int A ;
int B ;
int C ;
int D ;
String msg1 = "seleccione lo que quiere realizar \n Suma 1 -resta 2 -multiplicasion 3 -divicion 4 -and 5 -xor 6 -or 7 -salir 8";
String msg2 = "\nDame los valores";
String msg3 = "\nDame el valores 1";
String msg4 = "\nDame el valores 2";
String msg5 = "\nDame el valores 3";
String msg6 = "\nDame el valores 4";
void setup() {
  // put your setup code here, to run once:
  pinMode(a,OUTPUT);
  pinMode(b,OUTPUT);
  pinMode(c,OUTPUT);
  pinMode(d,OUTPUT);
  pinMode(e,OUTPUT);
  pinMode(f,OUTPUT);
  pinMode(g,OUTPUT);
  pinMode(a1,OUTPUT);
  pinMode(b1,OUTPUT);
  pinMode(c1,OUTPUT);
  pinMode(d1,OUTPUT);
  pinMode(e1,OUTPUT);
  Serial.begin(9600);
}
void loop(){
  Serial.print(msg1);
  ele = Serial.parseInt();
  while (Serial.available()==0);{
    
  }
  if (ele ==1){
      suma();
    }
    if (ele ==2){
      resta();
    }
    if (ele ==3){
      multiplicasion();
    }
    if (ele ==4){
      divicion();
    }
    if (ele ==5){
      andd();
    }
    if (ele ==6){
      orr();
    }
    if (ele ==7){
      xorr();
    }
}


void suma() {
  // put your main code here, to run repeatedly:
  //VARIABLES
    //Â·-----SUMA-----
  Serial.print(msg2);
  A = Serial.parseInt();
  Serial.print(msg3);
  B = Serial.parseInt();
  Serial.print(msg4);
  C = Serial.parseInt();
  Serial.print(msg5);
  D = Serial.parseInt();
  Serial.print(msg6);
  
  if ((A && B && D) || (A && B && C) || (C && D)) {
      uno();  //ACARREO
    } else {
      cero();//ACARREO
    }
  if ((A && B && !C && !D) || (A && B && C && D) || (!A && !C && D) || (!B && !C && D) || (!A && C && !D) || (!B && C && !D)) {
      dos();  //SEGUNDO BIT
    } else {
      cero();  //SEGUNDO BIT
    }
  if ((!A&&B) || (A&&!B)) {
      tres();  //PRIMER BIT
    } else {
      cero();  //PRIMER BIT
    }
  
}
void resta() {
  
    // -----RESTA-----
  Serial.print(msg2);
  Serial.print(msg3);
  A = Serial.parseInt();
  Serial.print(msg4);
  B = Serial.parseInt();
  Serial.print(msg5);
  C = Serial.parseInt();
  Serial.print(msg6);
  D = Serial.parseInt();
  if ((!C && D) || (!A && B)) {
      uno();  //SIGNO
    } else {
      cero();  //SIGNO
    }
  if ((!C && D) || (C && !D)) {
      dos();  //SEGUNDO BIT
    } else {
      cero();  //SEGUNDO BIT
    }
  if ((!A && B) || (A && !B)) {
      tres();  //TERCER BIT
    } else {
      cero();  //TERCER BIT
    }
  
}
void multiplicasion() {
  
    // -----MULTIPLICACION-----
  Serial.print(msg2);
  Serial.print(msg3);
  A = Serial.parseInt();
  Serial.print(msg4);
  B = Serial.parseInt();
  Serial.print(msg5);
  C = Serial.parseInt();
  Serial.print(msg6);
  D = Serial.parseInt();
  if (D && C && B && A) {
      uno();  //CUARTO BIT
    } else {
      cero();  //CUERTO BIT
    }
  if ((!A && C && D) || (!B && C && D)) {
      tres();  //TECER BIT
    } else {
      dos();  //TERCER BIT
    }
  if ((!A && B && C) || (B && C && !D) || (A && !B && D) || (A && !C && D)) {
      cuatro();  //SEGUNDO BIT
    } else {
      seis();  //SEGUNDO BIT
    }
  if (A && B) {
      nueve();  //PRIMER BIT
    } else {
      cero();  //PRIMER BIT
    }
}
void divicion() {
  
    // -----DIVISION-----
  Serial.print(msg2);
  Serial.print(msg3);
  A = Serial.parseInt();
  Serial.print(msg4);
  B = Serial.parseInt();
  Serial.print(msg5);
  C = Serial.parseInt();
  Serial.print(msg6);
  D = Serial.parseInt();
  if (!A && !B && !C && !D) {
      uno();  //ERROR
    } else {
      cero();  //ERROR
    }

  if ((!B && C && !D) || (A && !B && !D)) {
      dos();  //INFINITO
    } else {
      cero();  //INFINITO
    }

  if (B && C && !D) {
      tres();  //SEGUNDO BIT
    } else {
      cero();  //SEGUNDO BIT
    }
  if (!A && B && C && D) {
      dos();  //RESIDUO 2
    } else {
      cero();  //RESIDUO 2
    }

  if ((A && !B && D) || (A && !C && D)) {
      uno();  //RESIDUO 1
    } else {
      cero();  //RESIDUO 1
    }
  
}
void andd() {
  
    // -----AND-----
  Serial.print(msg2);
  Serial.print(msg3);
  A = Serial.parseInt();
  Serial.print(msg4);
  B = Serial.parseInt();
  Serial.print(msg5);
  C = Serial.parseInt();
  Serial.print(msg6);
  D = Serial.parseInt();
  if (C && D) {
      uno();  //SEGUNDO BIT
    } else {
      cero();  //SEGUNDO BIT
    }
  if (A && B) {
      dos();  //PRIMER BIT
    } else {
      cero();  //PRIMER BIT
    }
  
}
void orr() {
  
    // -----OR-----
  Serial.print(msg2);
  Serial.print(msg3);
  A = Serial.parseInt();
  Serial.print(msg4);
  B = Serial.parseInt();
  Serial.print(msg5);
  C = Serial.parseInt();
  Serial.print(msg6);
  D = Serial.parseInt();
  if (D || C) {
      uno();  //SEGUNDO BIT
    } else {
      cero();  //SEGUNDO BIT
    }
  if (A || B) {
      dos();  //PRIMER BIT
    } else {
      cero();  //PRIMER BIT
    }

}
void xorr() {
  
    // -----XOR-----
  Serial.print(msg2);
  Serial.print(msg3);
  A = Serial.parseInt();
  Serial.print(msg4);
  B = Serial.parseInt();
  Serial.print(msg5);
  C = Serial.parseInt();
  Serial.print(msg6);
  D = Serial.parseInt();
  if ((!C && D) || (C && !D)) {
      uno();  //SEGUNDO BIT
    } else {
      cero();  //SEGUNDO BIT
    }
  if ((!A && B) || (A && !B)) {
      dos();  //PRIMER BIT
    } else {
      cero();  //PRIMER BIT
    }
  
}

void cero() {
  ////cero
  digitalWrite(a, LOW);
  digitalWrite(b, LOW);
  digitalWrite(c, LOW);
  digitalWrite(d, LOW);
  digitalWrite(e, LOW);
  digitalWrite(f, LOW);
  digitalWrite(g, HIGH);
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
}
void uno() {
  ////uno
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, HIGH);
  digitalWrite(c, HIGH);
  digitalWrite(d, LOW);
  digitalWrite(e, LOW);
  digitalWrite(f, LOW);
  digitalWrite(g, LOW);

}
void dos() {
  ////dos
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, HIGH);
  digitalWrite(c, LOW);
  digitalWrite(d, HIGH);
  digitalWrite(e, HIGH);
  digitalWrite(f, LOW);
  digitalWrite(g, HIGH);

}
void tres() {
  ////tres
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, HIGH);
  digitalWrite(c, HIGH);
  digitalWrite(d, HIGH);
  digitalWrite(e, LOW);
  digitalWrite(f, LOW);
  digitalWrite(g, HIGH);

}
void cuatro() {
  ////cuatro
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, LOW);
  digitalWrite(b, HIGH);
  digitalWrite(c, HIGH);
  digitalWrite(d, LOW);
  digitalWrite(e, LOW);
  digitalWrite(f, HIGH);
  digitalWrite(g, HIGH);

}
void cinco() {
  ////cinco
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, LOW);
  digitalWrite(c, HIGH);
  digitalWrite(d, HIGH);
  digitalWrite(e, LOW);
  digitalWrite(f, HIGH);
  digitalWrite(g, HIGH);

}
void seis() {
  ////seis
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, LOW);
  digitalWrite(c, HIGH);
  digitalWrite(d, HIGH);
  digitalWrite(e, HIGH);
  digitalWrite(f, HIGH);
  digitalWrite(g, HIGH);

}
void siete() {
  ///siete
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, HIGH);
  digitalWrite(c, HIGH);
  digitalWrite(d, LOW);
  digitalWrite(e, LOW);
  digitalWrite(f, LOW);
  digitalWrite(g, HIGH);

}
void ocho() {
  ////ocho
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, HIGH);
  digitalWrite(c, HIGH);
  digitalWrite(d, HIGH);
  digitalWrite(e, HIGH);
  digitalWrite(f, HIGH);
  digitalWrite(g, HIGH);

}
void nueve() {
  ////nueve
  digitalWrite(a1, LOW);
  digitalWrite(b1, LOW);
  digitalWrite(c1, LOW);
  digitalWrite(d1, LOW);
  digitalWrite(e1, LOW);
  digitalWrite(a, HIGH);
  digitalWrite(b, HIGH);
  digitalWrite(c, HIGH);
  digitalWrite(d, LOW);
  digitalWrite(e, LOW);
  digitalWrite(f, HIGH);
  digitalWrite(g, HIGH);

}

